name: Python Package

on:
  push:
    branches:
     - main
    tags:
      - '*'

  pull_request:
    branches:
      - main

jobs:
  build-sdist:
    name: sdist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          submodules: 'recursive'

      - name: Build sdist
        run: pipx run build --sdist

      - name: Store the packages
        uses: actions/upload-artifact@v5
        with:
          name: python-package-source
          path: dist

  build-wheels:
    name: ${{ matrix.os.name }} wheels
    strategy:
      matrix:
        os:
          - { name: "linux", image: ubuntu-latest }
          - { name: "macos", image: macos-latest }
          - { name: "windows", image: windows-latest }
          
    runs-on: ${{ matrix.os.image }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          submodules: 'recursive'
  
      - uses: pypa/cibuildwheel@v3.2.1
        with:
          output-dir: dist
        env:
          CIBW_ARCHS_LINUX: x86_64
          CIBW_ARCHS_MACOS: universal2
          CIBW_ARCHS_WINDOWS: AMD64
          CIBW_BUILD: cp39-*
          CIBW_SKIP: pp* *musllinux* cp*t*
          
      - name: codecov
        uses: codecov/codecov-action@v5
  
      - name: Store the packages
        uses: actions/upload-artifact@v5
        with:
          name: python-package-${{ matrix.os.name }}
          path: dist

  test:
    name: Test ${{ matrix.os.name }} py${{ matrix.python }}
    needs: build-wheels
    strategy:
      fail-fast: false
      matrix:
        os:
          - { name: "linux", image: ubuntu-latest }
          - { name: "macos", image: macos-latest }
          - { name: "windows", image: windows-latest }
        python:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
          - "3.14"
    
    runs-on: ${{ matrix.os.image }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          submodules: 'recursive'
      
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python }}
      
      - name: Download all the wheel
        uses: actions/download-artifact@v6
        with:
          pattern: python-package-${{ matrix.os.name }}
          path: dist/
      
      - name: Install deps
        shell: bash
        run: |
          python -m pip install dolphin-memory-engine --no-index --find-links dist --force-reinstall
          python -m pip install pytest
          
      - name: Run tests
        run: python -m pytest

  pypi:
    runs-on: 'ubuntu-latest'
    needs:
      - build-sdist
      - test

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v6
        with:
          pattern: python-package-*
          merge-multiple: true
          path: dist/

      - name: Publish ðŸ“¦ to TestPyPI
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
      
      - name: Publish ðŸ“¦ to PyPI
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: pypa/gh-action-pypi-publish@release/v1
